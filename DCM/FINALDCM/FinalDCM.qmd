---
title: "Final Assignment DCM - Young Migrants and Degree Choice"
author: "Marc Sparhuber"
format: pdf
editor: source
execute:
  warning: false
  echo: false
toc: true
header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
---

\newpage 

```{r}
library(tidyverse)
library(tidymodels)
library(survival)
library(kableExtra)
library(gtsummary)
library(haven)

og_data <- read_dta(here::here("DCM","FINALDCM", "acs_2015.dta"))

og_data$degfield <- labelled::to_factor(og_data$degfield)
og_data$degfieldd <- labelled::to_factor(og_data$degfieldd)
og_data$degfield2 <- labelled::to_factor(og_data$degfield2)
og_data$degfield2d <- labelled::to_factor(og_data$degfield2d)
og_data$empstat <- labelled::to_factor(og_data$empstat)
og_data$rachsing <- labelled::to_factor(og_data$rachsing)
og_data$stateicp <- labelled::to_factor(og_data$stateicp)
og_data$met2013 <- labelled::to_factor(og_data$met2013)
og_data$bpld <- labelled::to_factor(og_data$bpld)
og_data$bpl <- labelled::to_factor(og_data$bpl)
og_data$occ <- labelled::to_factor(og_data$occ)
og_data$citizen <- labelled::to_factor(og_data$citizen)
```

```{r clogit}
# What are the alternative specific attributes (i.e., the outcomes associated with degree choice) that are considered desirable by choice makers (and their parents)?

data_clog <- og_data |> select(sex,age,stateicp,met2013,birthyr,bpl,citizen,yrimmig,
                          yrsusa1,rachsing,educd,degfield,empstat,uhrswork,inctot,incearn,poverty)

#drop na level in degree so it doesn't get annoying later
data_clog$degfield <- fct_recode(data_clog$degfield, NULL = "N/A")
data_clog$citizen <- fct_recode(data_clog$citizen, "Citizen" = "N/A")
data_clog$empstat <- fct_recode(data_clog$empstat, NULL = "N/A")

# reduce to people who have done a bachelors at least - they will be the observed group
data_clog <- data_clog |> filter(educd > 101 & educd != 999)

# make new variable to get age at migration and take a look at my group of interest
data_clog <- data_clog |> mutate(
   age_at_immigration = if_else(yrimmig != 0, yrimmig - (2015-age), NA_integer_),
   young_migrant = if_else(!is.na(age_at_immigration) & age_at_immigration >= 0 & age_at_immigration <= 21, "YM", "Not YM"),
   young_migrant = as_factor(young_migrant)
   ) |> 
  filter(birthyr >= 1960)
  # |> filter(birthyr > 1960 & !is.na(age_at_immigration) & age_at_immigration >= 0 & age_at_immigration <= 21) |> View()
# cho0sing born earliest 1960 because then the full range of possible degrees would have likely been available: 13,777 YM



# make a little summarize table
interesting_data_smile <- data_clog |>
  group_by(degfield) |> 
  filter(n()>=1000) |> 
  summarise(
    n_degree_holders = n(),
    med_age = median(age),
    n_women = sum(sex==2),
    p_women = sum(sex==2)/n(),
    n_young_migrants = sum(!is.na(age_at_immigration) & age_at_immigration >= 0 & age_at_immigration <= 21),
    p_young_migrants = sum(!is.na(age_at_immigration) & age_at_immigration >= 0 & age_at_immigration <= 21)/n(),
    n_employed = sum(empstat == "Employed"),
    p_employed = sum(empstat == "Employed")/n(),
    n_ym_employed = sum(empstat == "Employed" & !is.na(age_at_immigration) & age_at_immigration >= 0 & age_at_immigration <= 21),
    p_ym_employed_within = sum(empstat == "Employed" & !is.na(age_at_immigration) & age_at_immigration >= 0 & age_at_immigration <= 21)/n_young_migrants,
    p_ym_employed_general = sum(empstat == "Employed" & !is.na(age_at_immigration) & age_at_immigration >= 0 & age_at_immigration <= 21)/n(),
    mean_weekly_hours = round(mean(uhrswork),2),
    med_tot_income = median(inctot),
    med_earned_income = median(incearn),
    mean_poverty = round(mean(poverty),2)
    )


#so there are no too small categories blah
interesting_data_smile$degfield <- droplevels(interesting_data_smile$degfield)

# id part!
set.seed(1)
sample_degree_holders <- data_clog |> filter(degfield %in% interesting_data_smile$degfield)
sample_degree_holders$degfield <- fct_drop(sample_degree_holders$degfield)

sample_degree_holders <- sample_degree_holders |> 
group_by(young_migrant) |> 
  slice_sample(n = 10000) |> ungroup() |> mutate(ID = row_number())

size <- 10
alts <- interesting_data_smile$degfield

sample_degree_holders |> 
  ungroup() |> 
  select(ID) |>  
  mutate(alt = replicate(n(), sample(alts, size = size, replace = FALSE), simplify = FALSE)) |> 
  unnest(alt) |>
  anti_join(sample_degree_holders, by = join_by(ID, alt == degfield)) |> 
  group_by(ID) |> slice(1:(size-1)) ->
  degree_choice


# reduce variables in degree table for conditional logit
interesting_data_smile2 <- interesting_data_smile 
#|> select(-c(starts_with("n_"),starts_with("p_"),med_age))


sample_degree_holders |> 
  select(ID, alt = degfield) |>
  bind_rows(degree_choice) |> 
  group_by(ID) |> 
  arrange(ID, alt) |> 
  left_join(sample_degree_holders, by = join_by(ID)) |> 
  left_join(interesting_data_smile2, by = join_by(alt == degfield)) |> 
  mutate(choice = degfield == alt,
         choice = as.numeric(choice)) |> 
  select(-c(yrimmig,yrsusa1,met2013,educd,degfield,stateicp,bpl,age_at_immigration)) -> degree_choice2

# Sanity check good
sum(degree_choice2$choice) == nrow(sample_degree_holders)
sum(degree_choice2$choice)*size == nrow(degree_choice2)

library(survival)

# OKAY SO BIG REVEWLATION:
# dont include alt duh
# only look at what makes the choice, not the choice itself
# these models often don't work cause the multicol from including the alts itself

m_clog_inter <- clogit(choice ~ I(mean_weekly_hours:young_migrant) + I(mean_poverty:young_migrant) + I(med_earned_income:young_migrant) + I(med_tot_income:young_migrant) + I(med_age:young_migrant) + I(p_employed:young_migrant) + strata(ID), data = degree_choice2)
tidy(m_clog_inter) |> View()


not_ym_m <- clogit(choice ~ mean_weekly_hours + mean_poverty + med_earned_income + med_tot_income + med_age + p_employed + strata(ID), data = filter(degree_choice2, young_migrant == "Not YM"))
tidy(not_ym_m) |> View()

t_nym <- tbl_regression(not_ym_m, exponentiate = TRUE) |>
  modify_header(list(label="**Covariate**",
                     estimate="**Odds**")) |>
  modify_footnote(update = list(estimate ~ NA),
                  abbreviation=TRUE)
t_nym


ym_m <- clogit(choice ~ mean_weekly_hours + mean_poverty + med_earned_income + med_tot_income + med_age + p_employed + strata(ID), data = filter(degree_choice2, young_migrant == "YM"))
tidy(not_ym_m) |> View()

t_ym <- tbl_regression(ym_m, exponentiate = TRUE) |>
  modify_header(list(label="**Covariate**",
                     estimate="**Odds**")) |>
  modify_footnote(update = list(estimate ~ NA),
                  abbreviation=TRUE)
t_ym
```



```{r multinom}
# which degrees do migrants who enter the country young enter into more and what are their attributes?

data_mult <- og_data |> select(sex,age,stateicp,met2013,birthyr,bpl,citizen,yrimmig,
                          yrsusa1,rachsing,educd,degfield,empstat,uhrswork,inctot,incearn,poverty)


#drop na level in degree so it doesn't get annoying later
data_mult$degfield <- fct_recode(data_mult$degfield, NULL = "N/A")
data_mult$citizen <- fct_recode(data_mult$citizen, "Citizen" = "N/A")
data_mult$empstat <- fct_recode(data_mult$empstat, NULL = "N/A")


# reduce to people who have done a bachelors at least - they will be the observed group
data_mult <- data_mult |> filter(educd >= 101 & educd != 999)


# make new variable to get age at migration and take a look at my group of interest
data_mult <- data_mult |> mutate(
   age_at_immigration = if_else(yrimmig != 0, yrimmig - (2015-age), NA_integer_),
   young_migrant = if_else(!is.na(age_at_immigration) & age_at_immigration >= 0 & age_at_immigration <= 19, "YM", "Not YM"),
   young_migrant = as_factor(young_migrant),
   young_migrant_detailled = case_when(young_migrant == "YM" & age_at_immigration < 10 ~ "Migrated as Child (younger than 10 years old)",
                             young_migrant == "YM" & age_at_immigration >= 10 & age_at_immigration <= 19 ~ "Migrated as Adolescent (between 10 and 19 years old)",
                             young_migrant == "Not YM" ~ "Not YM"),
   young_migrant_detailled = fct_relevel(young_migrant_detailled, "Not YM")
   ) |> 
  filter(birthyr >= 1960)



#so there are no too small categories blah
data_mult$degfield <- droplevels(data_mult$degfield)
data_mult$bpl <- droplevels(data_mult$bpl)

# make broader categories for degfield
data_mult <- data_mult |> mutate(
  degfield_collapsed = fct_collapse(degfield,
    Engineering = c("Architecture", "Communication Technologies", "Engineering", "Engineering Technologies", "Military Technologies", "Nuclear, Industrial Radiology, and Biological Technologies", "Construction Services", "Electrical and Mechanic Repairs and Technologies", "Transportation Sciences and Technologies"),
    Sciences = c("Agriculture", "Environment and Natural Resources", "Computer and Information Sciences", "Biology and Life Sciences", "Physical Sciences", "Mathematics and Statistics"),
    Arts = c("Area, Ethnic, and Civilization Studies", "Cosmetology Services and Culinary Arts", "Linguistics and Foreign Languages", "English Language, Literature, and Composition", "Liberal Arts and Humanities", "Library Science", "Physical Fitness, Parks, Recreation, and Leisure", "Philosophy and Religious Studies", "Fine Arts", "History"),
    `Social Sciences` = c("Communications", "Family and Consumer Sciences", "Psychology", "Public Affairs, Policy, and Social Work", "Social Sciences"),
    Medicine = c("Medical and Health Sciences and Services"),
    Business = c("Business"),
    Education = c("Education Administration and Teaching"),
    other_level = "Other"
  ),
  degfield_collapsed = fct_relevel(degfield_collapsed, "Business"),
  sex = as_factor(sex),
  bpl_collapsed = fct_collapse(bpl,
                     other_level = "North America",
                     LatAm = c("Mexico","Central America","Cuba","Americas, n.s.","West Indies","SOUTH AMERICA"),
                     `Western Europe & Scandinavia` = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "England", "Scotland", "United Kingdom, ns", "Ireland", "Belgium", "France", "Netherlands", "Switzerland", "Greece", "Italy","Portugal", "Spain", "Austria", "Germany"),
                     `Eastern Europe` = c("Albania", "Bulgaria", "Czechoslovakia", "Hungary", "Poland", "Romania", "Yugoslavia", "Latvia", "Lithuania", "Other USSR/Russia", "Europe, ns", "Cyprus"),
                     `East Asia` = c("China", "Japan", "Korea"),
                     `South & South-East Asia` = c("India" ,"Cambodia (Kampuchea)", "Indonesia", "Laos", "Malaysia","Philippines","Singapore","Thailand","Vietnam", "Nepal", "Asia, nec/ns"),
                     `Middle East` = c("Afghanistan", "Iran","Iraq","Israel/Palestine", "Jordan","Kuwait","Lebanon","Saudi Arabia","Syria","Turkey","United Arab Emirates", "Yemen Arab Republic (North)"),
                     Africa = c("AFRICA"),
                     Oceania = c("Australia and New Zealand", "Pacific Islands")
  ),
  bpl_collapsed = fct_relevel(bpl_collapsed, "North America")
)

data_mult$sex <- droplevels(data_mult$sex)


data_mult |> select(sex, age, citizen, rachsing, degfield, degfield_collapsed, empstat, uhrswork, inctot, incearn, poverty, young_migrant, bpl_collapsed,birthyr, young_migrant_detailled) |> 
  filter(empstat == "Employed" & poverty != 0) -> data_mult

data_mult <- data_mult |> group_by(young_migrant) |> slice_sample(n = 20000) |> ungroup()

library(nnet)
library(broom)
library(modelr)

# YOUNG MIGRANT NEEDS TO BE SPLIT INTO DIFFERENT VALUES DEPENDING ON AGE -> THE YOUNGER THE MORE ADJUSTED?
multi <- multinom(degfield_collapsed ~ I(sex:young_migrant) + young_migrant_detailled + bpl_collapsed, data = data_mult, trace = F, model = T, na.action = na.exclude)
#tidy(multi) |> View()

modelsummary::modelsummary(multi, shape =  term ~ model + response,
             fmt = 2,
             statistic = 'conf.int',
             title = "title",
             exponentiate = TRUE,
             stars = TRUE)
```


```{r binary}
# here just compare the YM with other people - how are they unique? do they earn more or less? are they more poor?

data_binary <- og_data |> select(sex,age,stateicp,met2013,birthyr,bpl,citizen,yrimmig,
                          yrsusa1,rachsing,educd,degfield,empstat,uhrswork,inctot,incearn,poverty)

#drop na level in degree so it doesn't get annoying later
data_binary$degfield <- fct_recode(data_binary$degfield, NULL = "N/A")
data_binary$citizen <- fct_recode(data_binary$citizen, "Citizen" = "N/A")
data_binary$empstat <- fct_recode(data_binary$empstat, NULL = "N/A")

# reduce to people who have done a bachelors at least - they will be the observed group
data_binary <- data_binary |> filter(educd > 101 & educd != 999)

# make new variable to get age at migration and take a look at my group of interest
data_binary <- data_binary |> mutate(
   age_at_immigration = if_else(yrimmig != 0, yrimmig - (2015-age), NA_integer_),
   young_migrant = if_else(!is.na(age_at_immigration) & age_at_immigration >= 0 & age_at_immigration <= 21, "YM", "Not YM"),
   young_migrant = as_factor(young_migrant)
   ) |> 
  filter(birthyr >= 1960)
```




```{r the bin}
# degree_choice3 <- degree_choice2 |> select(ID, choice, rachsing, alt, young_migrant)
# 
# 
# # why does one work an the other doesn't?
# # https://stats.stackexchange.com/questions/377997/na-coefficients-produced-by-clogit-model
# this_works <- clogit(choice ~ mean_weekly_hours + mean_poverty+ med_earned_income + alt + strata(ID), data = degree_choice2)
# tidy(this_works) |> View()
# 
# this_doesnt_work <- clogit(choice ~ I(alt:young_migrant) + mean_weekly_hours + mean_poverty + med_earned_income + strata(ID), data = degree_choice2)
# tidy(this_doesnt_work) |> View()
# 
# 
# 
# degree_choice2 %>%
#   group_by(alt) %>%
#   summarize(Num_Unique_Values = n_distinct(uhrswork)) |> View()
# 
# 
# 
# # only person characteristics -> does not work
# person_only <- clogit(choice ~ I(as.numeric(uhrswork)) + strata(ID), data = degree_choice2)
# tidy(person_only) |> View()
# 
# 
# 
# # filtered stuff
# ym <- clogit(choice ~ mean_weekly_hours + mean_poverty+ med_earned_income + alt + strata(ID) ,
#        data = filter(degree_choice2, young_migrant == "YM"))
# tidy(ym) |> View()
# 
# t1 <- tbl_regression(ym, exponentiate = TRUE) |> 
#   modify_header(list(label="**Covariate**",
#                      estimate="**Odds**")) |>
#   modify_footnote(update = list(estimate ~ NA), 
#                   abbreviation=TRUE)
# t1
# 
# nym <- clogit(choice ~  mean_weekly_hours + mean_poverty+ med_earned_income + alt + strata(ID) ,
#        data = filter(degree_choice2, young_migrant == "Not YM"))
# tidy(nym) |> View()
# 
# t2 <- tbl_regression(nym, exponentiate = TRUE) |> 
#   modify_header(list(label="**Covariate**",
#                      estimate="**Odds**")) |>
#   modify_footnote(update = list(estimate ~ NA), 
#                   abbreviation=TRUE)
# t2
```


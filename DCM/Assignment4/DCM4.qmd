---
title: "Assignment 4 DCM - Party Vote and Views on Immigration in the UK"
author: "Marc Sparhuber"
format: pdf
editor: source
execute:
  warning: false
  echo: false
toc: true
header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
---

\newpage 

```{r}
library(tidyverse)
library(tidymodels)
library(survival)
library(kableExtra)
library(gtsummary)

data <- read.csv(here::here("DCM","Assignment4", "candidate.csv"))

options(scipen=999)
```

## Data stuff

```{r}
data1 <- data |> select(c(choID, ends_with("1")))
names(data1) <- gsub("[[:digit:]]", "", names(data1))
data2 <- data |> select(c(choID, ends_with("2")))
names(data2) <- gsub("[[:digit:]]", "", names(data2))

data <- bind_rows(data1, data2) |> arrange(choID) |> mutate(
  across(c(2:7, 10:11), as.factor),
  selected = as.numeric(selected))
names(data) <- gsub("^at", "", names(data))
names(data) <- snakecase::to_title_case(names(data))
data <- data |> rename(
  Education = Ed,
  Profession = Prof,
  Gender = Male,
  Income = Inc,
  ChoiceID = `Cho Id`,
  `Age (in years)` = Age
) |> mutate(`Age Squared` = I(`Age (in years)`^2))
```

```{r}
data |> 
  mutate(selected_table = factor(Selected,
                     labels = c("Unchosen","Chosen"))) |> 
  select(selected_table, Religion, Education, Profession, Gender, `Age (in years)`) |> 
  tbl_summary(by = selected_table, type = list(`Age (in years)` ~ "continuous")) |>
  as_gt()


data$Education <- fct_relevel(data$Education, "No BA")
data$Profession <- fct_relevel(data$Profession, "Car dealer")
#make noBA and Car Dealer reference categories
```

```{r}
m1 <- clogit(Selected ~ `Age (in years)` + strata(ChoiceID), data = data)
m1
m2 <- clogit(Selected ~ `Age (in years)` + `Age Squared` + strata(ChoiceID), data = data)
m2
m3 <- clogit(Selected ~ `Age (in years)` + Education + Profession + strata(ChoiceID), data = data)
m3
```

```{r}
t1 <- tbl_regression(m1, exponentiate = TRUE) |> 
  modify_header(list(label="**Covariate**",
                     estimate="**Odds**")) |>
  modify_footnote(update = list(estimate ~ NA), 
                  abbreviation=TRUE)

t2 <- tbl_regression(m2, exponentiate = TRUE) |> 
  modify_header(list(label="**Covariate**",
                     estimate="**Odds**")) |>
  modify_footnote(update = list(estimate ~ NA), 
                  abbreviation=TRUE)

t3 <- tbl_regression(m3, exponentiate = TRUE) |> 
  modify_header(list(label="**Covariate**",
                     estimate="**Odds**")) |>
  modify_footnote(update = list(estimate ~ NA), 
                  abbreviation=TRUE)

tbl_merge(tbls = list(t1, t2, t3),
          tab_spanner = c("**Model 1**", "**Model 2**", "**Model 3**"))
```

```{r}
#| fig-align: center

library(DescTools)
library(lmtest)

lr_test <- lrtest(mod_no_Immigration, mod_Immigration)

mod1_nagel <- PseudoR2(mod_no_Immigration, which = "Nagelkerke")
mod2_nagel <- PseudoR2(mod_Immigration, which = "Nagelkerke")


mf1 <- model.frame(party_vote ~ gender + age + tertiary_education,
                     data = data, na.action = na.omit)
mf2 <- model.frame(party_vote ~ gender + age + tertiary_education + Immigration,
                     data = data, na.action = na.omit)


mod1_pred <- predict(mod_no_Immigration, type = "class") |> 
  as_tibble() |> 
  bind_cols(mf1)
share_correct_m1 <- mean(mod1_pred$value == mod1_pred$party_vote)

mod2_pred <- predict(mod_Immigration, type = "class") |> 
  as_tibble() |> 
  bind_cols(mf2)
share_correct_m2 <- mean(mod2_pred$value == mod2_pred$party_vote)

data_fit <- as.data.frame(tribble(
  ~`Model 1`, ~`Model 2`,
  as.character(round(mod1_nagel,5)), as.character(round(mod2_nagel,5)),
  as.character(round(share_correct_m1,5)), as.character(round(share_correct_m2,5)),
  " ", as.character(round(lr_test[2,4],5)),
  " ", as.character(round(lr_test[2,5],5))))

rownames(data_fit) <- c("Nagelkerkeâ€™s pseudo-R2", "Share of correct predictions", "Likelihood Ratio", "Likelihood Ratio (p-value)")

kable(data_fit,
      caption = "Voting in the 2019 UK general election: Model fit statistics") |> 
  footnote(footnote_as_chunk = TRUE,
           threeparttable = TRUE, 
           general = "The Likelihood ratio is always calculated with the nested model to the left. Data from ESS (UK, 10th round).")
```


```{r}
m1tib <- tibble(ChoiceID = 1,
                `Age (in years)` = c(81, 78))

p1 <- m1tib |> bind_cols(Za = predict(m1, type = "lp", newdata = .)) |>  
  group_by(ChoiceID) |> 
  mutate(Pr = exp(Za) / sum(exp(Za)))



m2tib <- tibble(ChoiceID = 1,
                `Age (in years)` = c(81, 78),
                `Age Squared` = c(6561, 6084))

p2 <- m2tib %>% bind_cols(Za = predict(m2, type = "lp", newdata = .)) |>  
  group_by(ChoiceID) |> 
  mutate(Pr = exp(Za) / sum(exp(Za)))



m3tib <- tibble(ChoiceID = 1,
                `Age (in years)` = c(81, 78),
                Education = c("State university", "Ivy League university"),
                Profession = c("Lawyer", "Business owner"))

p3 <- m3tib %>% bind_cols(Za = predict(m3, type = "lp", newdata = .)) |>  
  group_by(ChoiceID) |> 
  mutate(Pr = exp(Za) / sum(exp(Za)))

pred_df <- tribble(
  ~Name, ~Pred, ~Model,
  "Biden", p1[1,4], "Model 1",
  "Trump", p1[2,4], "Model 1",
  "Biden", p2[1,5], "Model 2",
  "Trump", p2[2,5], "Model 2",
  "Biden", p3[1,6], "Model 3",
  "Trump", p3[2,6], "Model 3"
) |> unnest(Pred)
```


FOR PREDICTION -> USE TWO AGES AS PREDICTIONS TRUMPS AND BIDENS

--> in total 6 probabilities! 2 for each model!

--> given trumps age and bidens age (+their differences on the variables, i.e., job, edu, religion)
--> bar graph enough

we're doing out of sample prediction, should be in one of the early mentions of lab/lecture 6
--> needs two extra lines of code
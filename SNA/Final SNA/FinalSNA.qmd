---
title: "Final Assignment SNA"
author: "Marc Sparhuber"
format: pdf
editor: source
execute:
  warning: false
  echo: false
toc: true
header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
---

\newpage 

```{r load packages and attr data}
library(tidyverse)
library(network)		# network data storage
library(sna)			# network analysis routines
library(latticeExtra)	# for nicer convergence & gof plots
library(ergm)			# fitting & evaluating ERGMs
library(RSiena)
library(knitr)
library(kableExtra)

attributes <- read_csv(here::here("SNA", "Final SNA", "CodebooksAttributeData", "RECENS_students_dataset_w1234.csv"))

#finding the class without any leavers or joiners in waves 1-3
attributes_6200 <-  attributes |> select(-ends_with("4")) |> 
  group_by(class_1) |> 
  filter(all(is.na(left12)) & all(is.na(left23)) & 
         all(c_across(starts_with("newstudent")) == 0)) |> ungroup()
```

## Research questions and theoretical background

## Hypotheses

```{r get matrices ready}
#selecting variables of interest

attributes_6200 |> select(idcode, gender = gender_3, starts_with("nbrcom"), starts_with("impstd"), starts_with("stdnts"), starts_with("parent"), starts_with("ethnic"), starts_with("tryalc"), starts_with("trycig")) -> attributes_6200

ask_help1 <- read.csv(here::here("SNA", "Final SNA", "Networks_by_Type", "I_can_ask_for_help", "6200_24_12.csv"), row.names = 1) |> 
  rename_with(~substring(., 2)) |> 
  as.matrix()
ask_help2 <- read.csv(here::here("SNA", "Final SNA", "Networks_by_Type", "I_can_ask_for_help", "6200_22_12_2h.csv"), row.names = 1) |> 
  rename_with(~substring(., 2)) |> 
  as.matrix()
ask_help3 <- read.csv(here::here("SNA", "Final SNA", "Networks_by_Type", "I_can_ask_for_help", "6200_21_10_3h.csv"), row.names = 1)  |> 
  rename_with(~substring(., 2)) |> 
  as.matrix()
ask_help3 <- ask_help3[-35:-36, -35:-36]

look_up1 <- read.csv("C:/Users/User/Desktop/Labs and Assignments Winter early 24/CSS_Labs_early_24/SNA/Final SNA/Networks_by_Type/I_look_up/6200_24_1.csv", row.names = 1)  |>
  rename_with(~substring(., 2)) |>
  as.matrix()
look_up2 <- read.csv("C:/Users/User/Desktop/Labs and Assignments Winter early 24/CSS_Labs_early_24/SNA/Final SNA/Networks_by_Type/I_look_up/6200_22_1_2h.csv", row.names = 1) |>
  rename_with(~substring(., 2)) |>
  as.matrix()
look_up3 <- read.csv("C:/Users/User/Desktop/Labs and Assignments Winter early 24/CSS_Labs_early_24/SNA/Final SNA/Networks_by_Type/I_look_up/6200_21_1_3h.csv", row.names = 1)  |>
  rename_with(~substring(., 2)) |>
  as.matrix()
look_up3 <- look_up3[-35:-36, -35:-36]
```

## Data description (descriptive statistics, visualization)

```{r descriptives}

Hamming <- function(net1,net2) {
	tbl <- table(c(0,0,1,1,net1),c(0,1,0,1,net2))-1
	return(tbl[1,2]+tbl[2,1])
}
Ham12 <- Hamming(ask_help1,ask_help2)
Ham23 <- Hamming(ask_help2,ask_help3)

Jaccard <- function(net1,net2) {
	tbl <- table(c(0,0,1,1,net1),c(0,1,0,1,net2))-1
	return(tbl[2,2]/(tbl[1,2]+tbl[2,1]+tbl[2,2]))
}
Jac12 <- Jaccard(ask_help1,ask_help2)
Jac23 <- Jaccard(ask_help2,ask_help3)
# both above the threshold

# Degrees
# mean(degree(ask_help1))
# sd(degree(ask_help1))
# mean(degree(ask_help1,cmode="indegree"))
# sd(degree(ask_help1,cmode="indegree"))
# mean(degree(ask_help1,cmode="outdegree"))
# sd(degree(ask_help1,cmode="outdegree"))
# 
# mean(degree(ask_help2))
# sd(degree(ask_help2))
# mean(degree(ask_help2,cmode="indegree"))
# sd(degree(ask_help2,cmode="indegree"))
# mean(degree(ask_help2,cmode="outdegree"))
# sd(degree(ask_help2,cmode="outdegree"))
# 
# mean(degree(ask_help3))
# sd(degree(ask_help3))
# mean(degree(ask_help3,cmode="indegree"))
# sd(degree(ask_help3,cmode="indegree"))
# mean(degree(ask_help3,cmode="outdegree"))
# sd(degree(ask_help3,cmode="outdegree"))
# 
# # Density
# gden(ask_help1)
# gden(ask_help2)
# gden(ask_help3)
# 
# # Reciprocity
# grecip(ask_help1)
# grecip(ask_help2)
# grecip(ask_help3)
# 
# # Transitivity
# gtrans(ask_help1)
# gtrans(ask_help2)
# gtrans(ask_help3)

descs <- data.frame(
  `Measure/Variable` = c("Degrees","Indegrees","Outdegrees", "Density","Reciprocity","Transitivity"),
  `Mean/Value` = c(mean(degree(ask_help1)), mean(degree(ask_help1,cmode="indegree")), mean(degree(ask_help1,cmode="outdegree")), gden(ask_help1), grecip(ask_help1), gtrans(ask_help1)),
  `Standard Deviation` = c(sd(degree(ask_help1)), sd(degree(ask_help1,cmode="indegree")), sd(degree(ask_help1,cmode="outdegree")), " ", " ", " ")
  ) |> 
  bind_rows(data.frame(
  `Measure/Variable` = c("Degrees","Indegrees","Outdegrees", "Density","Reciprocity","Transitivity"),
  `Mean/Value` = c(mean(degree(ask_help2)), mean(degree(ask_help2,cmode="indegree")), mean(degree(ask_help2,cmode="outdegree")), gden(ask_help2), grecip(ask_help2), gtrans(ask_help2)),
  `Standard Deviation` = c(sd(degree(ask_help2)), sd(degree(ask_help2,cmode="indegree")), sd(degree(ask_help2,cmode="outdegree")), " ", " ", " ")
  )) |> 
  bind_rows(data.frame(
  `Measure/Variable` = c("Degrees","Indegrees","Outdegrees", "Density","Reciprocity","Transitivity"),
  `Mean/Value` = c(mean(degree(ask_help3)), mean(degree(ask_help3,cmode="indegree")), mean(degree(ask_help3,cmode="outdegree")), gden(ask_help3), grecip(ask_help3), gtrans(ask_help3)),
  `Standard Deviation` = c(sd(degree(ask_help3)), sd(degree(ask_help3,cmode="indegree")), sd(degree(ask_help3,cmode="outdegree")), " ", " ", " ")
  )) |>
  mutate(
    Wave = rep(1:3, each = 6),
    Wave = case_when(
     Wave == 1 ~ "Wave 1",
     Wave == 2 ~ "Wave 2",
     Wave == 3 ~ "Wave 3"
    )
  )

colnames(descs) <- c("Measure", "Mean/Value", "SD", "Wave")

descs |> mutate(
  SD = as.numeric(SD),
  across(where(is.numeric), round, digits = 2),
  SD = as.character(SD)) -> descs

descs[is.na(descs)] <- ""

table1 <- kable(descs[, -4],
    booktabs = TRUE,
    caption = "Network Descriptives By Wave"
  ) |> 
  pack_rows(tab_kable,
    index = table(fct_inorder(descs$Wave), useNA = "no"))

change <- data.frame(
  `Waves` = c("1 to 2", "2 to 3"),
  `Jaccard Index` = c(Jac12, Jac23),
  `Hamming Distance` = c(Ham12, Ham23)
) |> mutate(
  across(where(is.numeric), round, digits = 2))

colnames(change) <- c("Waves", "Jaccard Index", "Hamming Distance")

table2 <- kable(change, caption = "Network Descriptives Across Waves", booktabs = TRUE)

table1
table2
```

## Operationalization of hypotheses

> Prelim. hypotheses.
1. People request more help from their own gender -> same gender
2. People who consider grades more important get requested more help of -> alter grades important
3. TRIADIC STUFFS

```{r network objects & attributes}
grades_imp1 <- as.numeric(attributes_6200[[6]])
grades_imp2 <- as.numeric(attributes_6200[[7]])
grades_imp3 <- as.numeric(attributes_6200[[8]])

ask_help1 <- as.network(ask_help1)
ask_help1 %v% "gender" <- attributes_6200[,2]
ask_help1 %v% "grades_imp" <- c("darkred","yellow","darkgreen", "black")[grades_imp1]

ask_help2 <- as.network(ask_help2)
ask_help2 %v% "gender" <- attributes_6200[,2]
ask_help2 %v% "grades_imp" <- c("darkred","yellow","darkgreen")[grades_imp2]

ask_help3 <- as.network(ask_help3)
ask_help3 %v% "gender" <- attributes_6200[,2]
ask_help3 %v% "grades_imp" <- c("darkred","yellow","darkgreen")[grades_imp3]

```

```{r plottinggggg}
#| fig-width: 15
#| fig-height: 15

comemb <- clique.census(ask_help1, clique.comembership="sum")$clique.comemb # Co-membership matrix

coords <- cmdscale(1/(1+comemb))        # Perform an MDS  (multidimensional scaling) 
                                        # the more overlap, 
                                        # the "closer" the vertices

grades_imp1<-(attributes_6200$impstd_1)
grades_imp1A<-(round(3*(grades_imp1)/max((grades_imp1))))
colfunc <- colorRampPalette(c("yellow", "red"))
COLWB<-colfunc(3)
grades_imp2A<-grades_imp1A
grades_imp2A[grades_imp1A==1]<-COLWB[1]
grades_imp2A[grades_imp1A==2]<-COLWB[2]
grades_imp2A[grades_imp1A==3]<-COLWB[3]

grades_imp2<-(attributes_6200$impstd_2)
grades_imp3A<-(round(3*(grades_imp2)/max((grades_imp2))))
colfunc <- colorRampPalette(c("yellow", "red"))
COLWB<-colfunc(3)
grades_imp4A<-grades_imp3A
grades_imp4A[grades_imp3A==1]<-COLWB[1]
grades_imp4A[grades_imp3A==2]<-COLWB[2]
grades_imp4A[grades_imp3A==3]<-COLWB[3]

grades_imp3<-(!is.na(attributes_6200$impstd_3))
grades_imp6A<-(round(3*(grades_imp3)/max((grades_imp3))))
grades_imp6A[grades_imp6A == "3"] <- "#FFFF00"
grades_imp6A[grades_imp6A == "0"] <- "#FFFFFF"
grades_imp6A[c(15,16,32)] <- c("#FF0000","#FF0000","#FF0000")


gplot(ask_help1, 
      coord = coords, 
      vertex.sides = 3+(attributes_6200$gender == 1)+(attributes_6200$gender == 2)*50,
      vertex.col = grades_imp2A,
      main = "Class 6200 at Wave 1",
      sub = "Squares indicate boys, circles girls. 
      Red are those who are not influenced by whether they get good grades or not. 
      Yellow are those who are only satisfied with themselves if they get good grades.",
      cex.main = 2, 
      cex.sub = 2)

gplot(ask_help2, 
      coord = coords, 
      vertex.sides = 3+(attributes_6200$gender == 1)+(attributes_6200$gender == 2)*50, 
      vertex.col = grades_imp4A,
      main = "Class 6200 at Wave 2",
      sub = "Squares indicate boys, circles girls. 
      Red are those who are not influenced by whether they get good grades or not. 
      Yellow are those who are only satisfied with themselves if they get good grades.",
      cex.main = 2, 
      cex.sub = 2)

gplot(ask_help3, 
      coord = coords, 
      vertex.sides = 3+(attributes_6200$gender == 1)+(attributes_6200$gender == 2)*50, 
      vertex.col = grades_imp6A,
      main = "Class 6200 at Wave 3",
      sub = "Squares indicate boys, circles girls. 
      Red are those who are not influenced by whether they get good grades or not. 
      Yellow are those who are only satisfied with themselves if they get good grades. 
      White are NAs.",
      cex.main = 2, 
      cex.sub = 2)
```

```{r modellingg}
#| output: false

ask_help1 <- read.csv(here::here("SNA", "Final SNA", "Networks_by_Type", "I_can_ask_for_help", "6200_24_12.csv"), row.names = 1) |> 
  rename_with(~substring(., 2)) |> 
  as.matrix()
ask_help2 <- read.csv(here::here("SNA", "Final SNA", "Networks_by_Type", "I_can_ask_for_help", "6200_22_12_2h.csv"), row.names = 1) |> 
  rename_with(~substring(., 2)) |> 
  as.matrix()
ask_help3 <- read.csv(here::here("SNA", "Final SNA", "Networks_by_Type", "I_can_ask_for_help", "6200_21_10_3h.csv"), row.names = 1)  |> 
  rename_with(~substring(., 2)) |> 
  as.matrix()
ask_help3 <- ask_help3[-35:-36, -35:-36]

helpnet <- sienaDependent(array(c(ask_help1, ask_help2, ask_help3),
	dim=c(34,34,3)))
gender <- coCovar(attributes_6200$gender)
grades_important <- varCovar(as.matrix(attributes_6200[,6:8]))
data_siena <- sienaDataCreate(helpnet, gender, grades_important)

model_siena <- getEffects(data_siena)

# ADD EFFECTS TO OBJECTIVE FUNCTION:
model_siena <- includeEffects(model_siena,
	transTrip, transRecTrip, outTrunc, outPop, denseTriads) # clustering & other fit-improving effects
model_siena <- includeEffects(model_siena,
	egoX, altX, # sender, receiver
	sameX, interaction1 = "gender") # homophily effects on gender
model_siena <- includeEffects(model_siena,
	egoX, altX, # sender, receiver
	simX, interaction1 = "grades_important") # homophily effects on how important grades are

# Estimate it and inspect results:
controls <- sienaAlgorithmCreate(n3 = 1000, nsub = 5, seed = 2)
results_siena <- siena07(controls, data = data_siena, effects = model_siena)

test <- siena.table(results_siena, type = "tex", tstat = TRUE, sig = TRUE, d = 2)
#convergence ratio is good :3, as below 0.25
```

## Results (see literature seminar readings on how SAOM results are presented)

```{=latex}
\begin{table}[h]
    \caption{Summary of Results}
    \centering
    \begin{center}
    \begin{tabular}{|l | r@{.}l r@{.}l r@{.}l |}
        \hline
        \rule{0pt}{2ex}\relax
        Effect &\multicolumn{2}{c}{par.}&\multicolumn{2}{c }{ (s.e.) } &\multicolumn{2}{c | }{$t$ stat.} \\[0.5ex]
        \hline
        \rule{0pt}{2ex}\relax
        Rate 1 & 17 & 51 & (2 & 37) & \omit & -\\
        Rate 2 & 16 & 26 & (2 & 43) & \omit & -\\
        \hline
        \rule{0pt}{2ex}\relax
        outdegree (density)          & --1 & 38$^{\ast\ast\ast}$ & (0 & 13) & --10 & 71\\
        reciprocity                  &   1 & 76$^{\ast\ast\ast}$ & (0 & 20) &    8 & 71\\
        transitive triplets          &   0 & 27$^{\ast\ast\ast}$ & (0 & 03) &    9 & 04\\
        transitive recipr. triplets  & --0 & 16$^\ast$           & (0 & 07) &  --2 & 20\\
        outdegree - popularity       & --0 & 11$^{\ast\ast\ast}$ & (0 & 02) &  --6 & 74\\
        outdegree-trunc(1)           & --2 & 64$^{\ast\ast\ast}$ & (0 & 48) &  --5 & 52\\
        gender alter                 &   0 & 24$^\ast$           & (0 & 11) &    2 & 15\\
        gender ego                   & --0 & 15                  & (0 & 10) &  --1 & 51\\
        same gender                  &   0 & 32$^{\ast\ast\ast}$ & (0 & 09) &    3 & 43\\
        grades-important alter       & --0 & 01                  & (0 & 07) &  --0 & 08\\
        grades-important ego         &   0 & 02                  & (0 & 07) &    0 & 24\\
        grades-important similarity  &   0 & 24$^\dagger$        & (0 & 14) &    1 & 66\\
        \hline
    \end{tabular}
    \end{center}
    \footnotesize{$^\dagger$ $p$ $<$ 0.1;
				$^\ast$ $p$ $<$ 0.05; $^{\ast\ast}$ $p$ $<$ 0.01;
				$^{\ast\ast\ast}$ $p$ $<$ 0.001;} \\
    \footnotesize{convergence $t$ ratios all $<$ 0.12.} \\
    \footnotesize{Overall maximum convergence ratio 0.23.}
    \label{tab:sample}
\end{table}
```

```{r gof 1}
#| output: false

# specify the options for the simulation algorithm:
SimCont <- sienaAlgorithmCreate(n3 = 1000, nsub = 4, seed = 2)

# add simulated networks to model results:
TheSims1 <- siena07(SimCont, data = data_siena, effects = model_siena,
	returnDeps = TRUE,
	prevAns = results_siena)
```

```{r gof 2}
#| fig-width: 10
#| fig-height: 7

# goodness of fit for indegree distribution:
gofIndegrees <- sienaGOF(TheSims1, 
                          varName = "helpnet",
                          IndegreeDistribution, # the fit function to be evaluated
                          cumulative = FALSE, # (same meaning as in probability distributions)
                          levls = 0:15) # evaluate indegrees on these 16 fit dimensions
plot(gofIndegrees)

# goodness of fit for outdegree distribution:
gofOutdegrees <- sienaGOF(TheSims1, 
                           varName = "helpnet",
                           OutdegreeDistribution,
                           cumulative = FALSE, 
                           levls = 0:15) 
plot(gofOutdegrees)

# goodness of fit for triad census:
gofTriads <- sienaGOF(TheSims1, 
                       varName = "helpnet", 
                       TriadCensus, 
                       verbose = FALSE)
plot(gofTriads, 
     center = TRUE, 
     scale = TRUE)
```

```{r}
#| output: false

# helpnet <- sienaDependent(array(c(ask_help1, ask_help2, ask_help3),
# 	dim=c(34,34,3)))
# gender <- coCovar(attributes_6200$gender)
# #grades_important <- varCovar(as.matrix(attributes_6200[,6:8]))
# look_upnet <- varDyadCovar(array(c(look_up1, look_up2),
# 	dim=c(34,34,2)))
# grades_important <- sienaDependent(as.matrix(attributes_6200[,6:8]), type = "behavior")
# 
# data_siena <- sienaDataCreate(helpnet, gender, grades_important, look_upnet)
# 
# model_siena <- getEffects(data_siena)
# 
# 
# # ADD EFFECTS TO NETWORK OBJECTIVE FUNCTION:
# model_siena <- includeEffects(model_siena, name='helpnet',
# 	transTrip, transRecTrip, outTrunc, outPop, denseTriads) # clustering
# model_siena <- includeEffects(model_siena, name='helpnet',
# 	X, interaction1='look_upnet') # friendship effect
# model_siena <- includeEffects(model_siena, name='helpnet',
# 	egoX, altX, sameX, interaction1='gender') # three gender effects
# # model_siena <- includeEffects(model_siena, name='helpnet',
# # 	sameX,interaction1='bachelor') # educational background homophily
# model_siena <- includeEffects(model_siena, name='helpnet',
# 	egoX,altX,simX,interaction1='grades_important') # three performance effects
# 
# # ADD EFFECTS TO BEHAVIOUR OBJECTIVE FUNCTION:
# model_siena <- includeEffects(model_siena, name='grades_important',
# 	indeg, outdeg, avSim, interaction1='helpnet') # three effects conjugate to the above
# model_siena <- includeEffects(model_siena, name='grades_important',
# 	effFrom, interaction1='gender') # effect of gender on performance
# # INSPECT MODEL SPECIFICATION:
# model_siena
# 
# controls <- sienaAlgorithmCreate(n3 = 1000, nsub = 5, seed = 2)
# coevresults <- siena07(controls, dat = data_siena, effects = model_siena)
# 
# # make table:
# siena.table(coevresults, type = "html", tstat = TRUE, sig = TRUE, d = 2)
```

```{=latex}
<!-- \begin{table}[h] -->
<!--     \caption{Summary of Results} -->
<!--     \centering -->
<!--     \begin{center} -->
<!--     \begin{tabular}{|l | r@{.}l r@{.}l r@{.}l |} -->
<!--         \hline -->
<!--         \multicolumn{7}{|l|}{\emph{Network Dynamics}} \\ -->
<!--         \hline -->
<!--         \rule{0pt}{2ex}\relax -->
<!--         Effect &\multicolumn{2}{c}{par.}&\multicolumn{2}{c }{ (s.e.) } &\multicolumn{2}{c | }{$t$ stat.} \\[0.5ex] -->
<!--         \hline -->
<!--         constant helpnet rate (period 1)      &    15 & 35 & (    11 & 66) & \omit & -\\ -->
<!--         constant helpnet rate (period 2)      &    17 & 28 & (    34 & 37) & \omit & -\\ -->
<!--         \hline -->
<!--         \rule{0pt}{2ex}\relax -->
<!--         outdegree (density)                   &   --1 & 54                  & (     0 & 94) & --1 & 63\\ -->
<!--         reciprocity                           &     1 & 84                  & (     4 & 03) &   0 & 46\\ -->
<!--         transitive triplets                   &     0 & 28                  & (     0 & 30) &   0 & 93\\ -->
<!--         transitive recipr. triplets           &   --0 & 03                  & (     0 & 39) & --0 & 07\\ -->
<!--         dense triads                          &   --0 & 13                  & (     0 & 76) & --0 & 17\\ -->
<!--         outdegree - popularity                &   --0 & 10                  & (     0 & 17) & --0 & 57\\ -->
<!--         outdegree-trunc(1)                    &   --2 & 29                  & (    18 & 54) & --0 & 12\\ -->
<!--         look-upnet                            &     0 & 45                  & (     1 & 61) &   0 & 28\\ -->
<!--         gender alter                          &     0 & 09                  & (     0 & 92) &   0 & 10\\ -->
<!--         gender ego                            &   --0 & 01                  & (     0 & 41) & --0 & 02\\ -->
<!--         same gender                           &     0 & 25                  & (     0 & 25) &   1 & 01\\ -->
<!--         grades-important alter                &     0 & 35                  & (     3 & 30) &   0 & 11\\ -->
<!--         grades-important ego                  &     0 & 09                  & (     1 & 13) &   0 & 08\\ -->
<!--         grades-important similarity           &     0 & 96                  & (     3 & 46) &   0 & 28\\ -->
<!--         \hline -->
<!--         \multicolumn{7}{|l|}{\emph{Behaviour Dynamics}} \\ -->
<!--         \hline -->
<!--         \rule{0pt}{2ex}\relax -->
<!--         rate grades-important (period 1)      &     2 & 92 & (    16 & 36) & \omit & -\\ -->
<!--         rate grades-important (period 2)      &     2 & 61 & (    22 & 64) & \omit & -\\ -->
<!--         \hline -->
<!--         \rule{0pt}{2ex}\relax -->
<!--         grades-important linear shape         & --362 & 18                  & (125151 & 56) & --0 & 00\\ -->
<!--         grades-important quadratic shape      &   168 & 56                  & ( 58602 & 73) &   0 & 00\\ -->
<!--         grades-important average similarity   & --757 & 22                  & (264561 & 12) & --0 & 00\\ -->
<!--         grades-important indegree             &   --2 & 82                  & (  1110 & 51) & --0 & 00\\ -->
<!--         grades-important outdegree            &  --27 & 85                  & (  9685 & 34) & --0 & 00\\ -->
<!--         grades-important: effect from gender  &     4 & 35                  & (  1130 & 52) &   0 & 00\\ -->
<!--         \hline -->
<!--     \end{tabular} -->
<!--     \end{center} -->
<!--     \footnotesize{$^\dagger$ $p$ $<$ 0.1; -->
<!-- 				$^\ast$ $p$ $<$ 0.05; $^{\ast\ast}$ $p$ $<$ 0.01; -->
<!-- 				$^{\ast\ast\ast}$ $p$ $<$ 0.001;} \\ -->
<!--     \footnotesize{convergence $t$ ratios all $<$ 3.32.} \\ -->
<!--     \footnotesize{Overall maximum convergence ratio 5.66.} -->
<!--     \label{tab:sample} -->
<!-- \end{table} -->
```

## Conclusions and Discussion


---
title: "Assignment 2 SNA - Island State Communities"
author: "Marc Sparhuber"
format: pdf
editor: source
execute:
  warning: false
  echo: false
toc: true
header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
---

\newpage 

1) 
Explain why the homophily mechanism might create networks in which there is a substantial number of reciprocated ties and transitively closed triads, even if no explicit mechanisms of reciprocation and transitive closure operate.

> When individuals chose one another as friends as in the case of homophily based on shared characteristics, then this can inadvertently lead to an increase in reciprocated ties. This is due to a shared characteristic in the nodes i and j leading to the nomination of j as a friend of i's. Since both nodes, however, possess the same characteristic, it is entirely feasible that j also nominates i as a friend because of the shared characteristic. This then results in the same outcomes as reciprocity (i and j nominating each other as friends) but is simply the result of similarity of node characteristics rather than due to having been chosen as a friend first.

> Regarding transitive closure, the tendency to have an increased number of transitively closed triads is due to the fact that nodes i and j have both been chosen as friends by a third node k. Homophily assumes that when k made the decision to nominate them as friends that this was due to shared characteristics. This extends to a potential tie between i and j as both of them can be assumed to have shared characteristics due to k having chosen both of them as friends. Therefore, although the result may seem to be the result of an explicit transitive closure mechanism, it may just be the outcome of homophily.

```{r}
# Load the vocabulary of the neccessary packages:
library(network)		# network data storage
library(sna)			# network analysis routines
library(latticeExtra)	# for nicer convergence & gof plots
library(ergm)			# fitting & evaluating ERGMs
library(tidyverse)

load("C:/Users/marcs/Desktop/Labs/CSS_Labs_early_24/SNA/Assignment3SNA/marsp357.RData")
#load("C:/Users/User/Desktop/Labs and Assignments Winter early 24/CSS_Labs_early_24/SNA/Assignment3SNA/marsp357.RData")
```

2) Please program two R-functions for evaluating a given network:
− one that calculates the number of reciprocated ties,
− another one that calculates the number of transitively closed triads.
Then evaluate your personalised school class network data set on these two dimensions by
applying these functions. 


```{r}
n_recip <- function(matrix) {
  dyad.census(matrix)[1]
}
#n_recip(fri)
```

> The number of reciprocated ties is `{r} n_recip(fri)`.

```{r}
n_trans_closed_triads <- function(adjacency_matrix) {
  triad.census(adjacency_matrix, mode = "digraph")[9]
}
#n_trans_closed_triads(fri)
```

> The number of transitively closed triads is `{r} n_trans_closed_triads(fri)`.

```{r}
# 3) Bonus question: Explain for each function what its expected value is for random networks
# with the same number of nodes and the same probability of ties as your personalised school
# class network (hint: you need not generate random networks for this, it can be calculated
# analytically). Is the empirical value in your data set (calculated in Exercise 2) above this
# chance-expectation?

# # Assuming you have calculated the number of observed ties, reciprocated ties, 
# # and transitively closed triads in your personalized school class network.
# 
# # Total number of nodes in the network
# total_nodes <- nrow(fri)
# 
# # Total number of possible ties in an undirected network
# total_possible_ties <- total_nodes * (total_nodes - 1) / 2
# 
# # Calculate the probability of ties in the network
# probability_of_ties <- network.edgecount(friends) / total_possible_ties
# 
# # Calculate the expected number of reciprocated ties based on probability of ties
# expected_reciprocated_ties <- total_possible_ties * probability_of_ties^2
# 
# # Calculate the expected number of transitively closed triads based on probability of ties
# expected_transitive_triads <- total_possible_ties^2 * probability_of_ties^3
# 
# # Compare with empirical values
# if (28 > expected_reciprocated_ties) {
#   print("The empirical value for reciprocated ties is above the chance expectation.")
# } else {
#   print("The empirical value for reciprocated ties is below the chance expectation.")
# }
# 
# if (9 > expected_transitive_triads) {
#   print("The empirical value for transitively closed triads is above the chance expectation.")
# } else {
#   print("The empirical value for transitively closed triads is below the chance expectation.")
# }
```


4) Please calculate a student-by-student matrix that indicates how many hobbies two students have in common.

- What is the average amount of hobbies that friends have in common in your data set? 
- What is the average amount of hobbies that non-friends have in common? Do these numbers indicate hobby-homophily of friendship?

(Note: make sure that you handle the matrix diagonal correctly in these calculations!
Nobody is their own friend, and nobody is a “non-friend” to themselves either!) 

```{r}
#this counts a "friend" as someone you nominate as a friend - does not need to be reciprocal!

hob_t <- hob %*% t(hob)

hob_t2 <- hob_t
diag(hob_t2) <- NA
fri2 <- fri
diag(fri2) <- NA

avg_hobbies_friends <- mean(hob_t2[fri2 == 1], na.rm = TRUE)
avg_hobbies_non_friends <- mean(hob_t2[fri2 == 0], na.rm = TRUE)
```

> The average amount of hobbies that friends have in common is `{r} avg_hobbies_friends`.
> The average amount of hobbies that non-friends have in common is `{r} avg_hobbies_non_friends`.

> These results indicate slightly higher hobby-homophily among friends than among non-friends. Importantly, the way this is measured only takes into account whether i nominates j as a friend and not whether it is reciprocal. Therefore, a friend, in this conceptualization is someone that an individual nominated as such.

Finally, let us move to the modelling of your data set, in which your reasoning from Exercise 1 can be quantitatively assessed, combining empirical analysis with simulation.

5) Please fit three exponential random graph models to the data:

The “full model”: A model that simultaneously assesses 

overall tie creation tendencies, 
reciprocation tendencies, 
transitive closure tendencies (hint: use gwesp), and 
three homophily tendencies: 
for gender (hint: use nodematch), 
school attitude (hint: use absdiff) and 
shared hobbies (hint: use edgecov applied to the matrix obtained in Exercise 4). 
For statistical reasons (hierarchy principle) please also include the twopath effect; this will help avoid estimation problems.

The “reduced model”: A model where reciprocation, transitive closure and the twopath effect are dropped from the full model, whereas the three homophily terms and the general tie creation tendency are retained.

The “null model”: A model in which also the homophily terms are dropped, and only the overall tie creation tendency is retained. 

```{r}
friends <- network(fri)
friends %v% "gender" <- fem
friends %v% "gender_col" <- 
	c("darkblue","darkred")[fem+1]
friends %v% "school_attitude" <- sch

# full model
model_full <- friends ~ edges + mutual + gwesp(0.5,fixed=TRUE) + nodematch("gender") + absdiff("school_attitude") + edgecov(hob_t) + twopath
results_full <- ergm(model_full, control = control.ergm(seed = 1))

# reduced model
model_reduc <- friends ~ edges + nodematch("gender") + absdiff("school_attitude") + edgecov(hob_t)
results_reduc <- ergm(model_reduc, control = control.ergm(seed = 1))

# null model
model_null <- friends ~ edges
results_null <- ergm(model_null, control = control.ergm(seed = 1))
```

6) Report the results in one(!) table and interpret them in a brief text. Make sure to include information criteria in your table and address them in a model comparison.

Bonus addition: If you have time, you can also assess goodness of fit and include summary information (e.g., p-values) in the table and discuss them next to the information criteria. 

```{r}
mods <- list(
  "Null Model" = results_null,
  "Reduc. Model" = results_reduc,
  "Full Model" = results_full
)

library(modelsummary)

cm <- c("edges" = "Edges",
        "mutual" = "Mutual",
        "gwesp.OTP.fixed.0.5" = "Transitive Closure",
        "nodematch.gender" = "Gender",
        "absdiff.school_attitude" = "School Attitude",
        "edgecov.hob_t" = "Shared Hobbies",
        "twopath" = "Twopath")

modelsummary(mods,
             stars = T,
             fmt = 2,
             title = "School network: ERGM results",
             statistic = "conf.int",
             coef_map = cm)
```

> BRIEF INTERPRETATION HERE

7) Please simulate 100 networks from each model. Evaluate the simulated data in terms of the functions you programmed for Exercise 2) above. Compare the models in terms of their simulations to each other graphically and to the observed data. Concretely:

− Make four network visualisations: one example graph from each set of simulations, and the empirical data set, with nodes coloured by gender.

− Make two plots, one for each function programmed in Exercise 2), each of which contains the three simulated distributions and the empirical value of the index as reference (i.e., the value you calculated in Exercise 2). 

```{r}
sim_full <- simulate(results_full, nsim = 100, seed = 1)
sim_reduc <- simulate(results_reduc, nsim = 100, seed = 1)
sim_null <- simulate(results_null, nsim = 100, seed = 1)

#gof or mcmc.diagnostics()

sims_full_results_dyad <- lapply(sim_full, n_recip)
sims_full_results_triad <- lapply(sim_full, n_trans_closed_triads)

sim_reduc_results_dyad <- lapply(sim_reduc, n_recip)
sim_reduc_results_triad <- lapply(sim_reduc, n_trans_closed_triads)

sim_null_results_dyad <- lapply(sim_null, n_recip)
sim_null_results_triad <- lapply(sim_null, n_trans_closed_triads)
```

```{r}
#| fig-width: 10
#| fig-height: 10

plot(friends, vertex.col = "gender_col", main = "empirical")
plot(sim_full[[83]],	vertex.col = "gender_col", main = "Sim Full")
plot(sim_reduc[[52]], vertex.col = "gender_col", main = "Sim Reduc")
plot(sim_null[[25]],	vertex.col = "gender_col", main = "Sim Null")
```

```{r}
df_dyad <- t(data.frame(sims_full_results_dyad)) |> cbind(t(data.frame(sim_reduc_results_dyad))) |> cbind(t(data.frame(sim_null_results_dyad))) |> cbind(n_recip(fri)) |> as_tibble() |> rename(V_Full = V1, V_Reduc = V2, V_Null = V3, Constant = V4) |> as_tibble() |> pivot_longer(cols = starts_with("V"), names_to = "variable", values_to = "value")

df_dyad$x <- seq_along(df_dyad$value)

ggplot(df_dyad, aes(x = x, y = value, color = variable)) +
  geom_line() +
  geom_hline(aes(yintercept = Constant), linetype = "dashed") +
  labs(title = "Line Graph with Constant Line",
       x = "X Axis Label",
       y = "Y Axis Label",
       color = "Variables") +
  theme_light()
```

```{r}
df_triad <- t(data.frame(sims_full_results_triad)) |> cbind(t(data.frame(sim_reduc_results_triad))) |> cbind(t(data.frame(sim_null_results_triad))) |> cbind(n_trans_closed_triads(fri)) |> as_tibble() |> rename(V_Full = V1, V_Reduc = V2, V_Null = V3, Constant = V4) |> as_tibble() |> pivot_longer(cols = starts_with("V"), names_to = "variable", values_to = "value")

df_triad$x <- seq_along(df_dyad$value)

ggplot(df_triad, aes(x = x, y = value, color = variable)) +
  geom_line() +
  geom_hline(aes(yintercept = Constant), linetype = "dashed") +
  labs(title = "Line Graph with Constant Line",
       x = "X Axis Label",
       y = "Y Axis Label",
       color = "Variables") +
  theme_light()
```

8) Try to substantiate your reasoning in Exercise 1) based on these results.

9) Please indicate whom you collaborated with when answering the above questions, and
whose input you considered particularly helpful.
